<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!--开启注解扫描-->
    <context:component-scan base-package="com.yyyu.spring.pojo.service"/>

   <!-- 1.配置目标对象(注解了)-->
    <bean id="userService" class="com.yyyu.spring.pojo.service.UserServiceImpl"/>
  <!--  2.配置通知对象-->
    <bean id="myAdvice" class="com.yyyu.spring.pojo.advice.MyAdvice"/>
    <!--AOP配置-->
    <aop:config>
        <!--配置切入点-->
        <aop:pointcut id="pc0" expression="execution(* com.yyyu.spring.pojo.service.*ServiceImpl.save*(..))"/>
        <aop:pointcut id="pc1" expression="execution(* com.yyyu.spring.pojo.service.*ServiceImpl.update*(..))"/>
        <aop:pointcut id="pc2" expression="execution(* com.yyyu.spring.pojo.service.*ServiceImpl.delete*(..))"/>
        <!--配置切面-->
        <aop:aspect ref="myAdvice">
            <!--给 execution中匹配到的方法添加 前置通知before-->
            <aop:before method="before" pointcut-ref="pc0"/>
            <aop:after method="after" pointcut-ref="pc1"/>
            <aop:after-returning method="afterReturning" pointcut-ref="pc1"/>
            <aop:around method="around" pointcut-ref="pc2"/>
        </aop:aspect>
    </aop:config>

    <!--注解的方式配置-->
    <bean class="com.yyyu.spring.pojo.advice.MyAdvice2"/>
    <!-- 开启使用注解完成织入 -->
    <aop:aspectj-autoproxy/>

</beans>